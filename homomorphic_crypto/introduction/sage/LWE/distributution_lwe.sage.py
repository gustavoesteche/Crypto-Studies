

# This file was *autogenerated* from the file distributution_lwe.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2p3 = RealNumber('2.3'); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_20 = Integer(20); _sage_const_10 = Integer(10)
from sage.stats. distributions . discrete_gaussian_integer     import DiscreteGaussianDistributionIntegerSampler     as DiscreteGaussian

# imported the Discrete Gaussian to generate the noise of the dist

class LWE_distribution:
    def __init__(self, s, q, sigma = _sage_const_2p3 ):
        self.n = len(s)  # s - secret key, q - ring of operations, sigma - dist medium
        self.s = s
        self.sigma = sigma
        self.D = DiscreteGaussian(sigma)
        self.Zq = ZZ.quotient(q)

    def random_noise(self):
        return vector([self.D() for _ in range(self.n)])

    def random_a(self):
        a = []
        for i in range(self.n):
            a.append([self.Zq.random_element() for _ in range(self.n)])
        return matrix(self.Zq, a)

    def sample(self):
        a = self.random_a()
        e = self.random_noise()
        b = self.s * a + e
        return a,b 
    
def sample_s(n, q):
    return vector([ZZ.random_element(_sage_const_0 , q-_sage_const_1 ) for _ in range(n)])

LWE = LWE_distribution(sample_s(_sage_const_20 , _sage_const_10 ),_sage_const_10 )
print(LWE.sample())


